version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    container_name: zookeeper1

  kafka101:
    image: confluentinc/cp-kafka:${CONFLUENT_VERSION}
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9992:9992"
    container_name: kafka101
    environment:
      KAFKA_BROKER_ID: 101
      KAFKA_JMX_PORT: 9992
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka101:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka101:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper1:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'

#  kafka102:
#    image: confluentinc/cp-kafka:${CONFLUENT_VERSION}
#    depends_on:
#      - zookeeper
#    ports:
#      - "9092:9092"
#      - "9992:9992"
#    container_name: kafka102
#    environment:
#      KAFKA_BROKER_ID: 102
#      KAFKA_JMX_PORT: 9992
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka102:29092,PLAINTEXT_HOST://localhost:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
#      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka102:29092
#      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper1:2181
#      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
#      CONFLUENT_METRICS_ENABLE: 'true'
#      KAFKA_HEAP_OPTS: ${KAFKA_BROKER_HEAP_OPTS}
#
#  kafka103:
#    image: confluentinc/cp-kafka:${CONFLUENT_VERSION}
#    depends_on:
#      - zookeeper
#    ports:
#      - "9093:9093"
#      - "9993:9993"
#    container_name: kafka103
#    environment:
#      KAFKA_BROKER_ID: 103
#      KAFKA_JMX_PORT: 9993
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka103:29092,PLAINTEXT_HOST://localhost:9093
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
#      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka103:29092
#      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper1:2181
#      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
#      CONFLUENT_METRICS_ENABLE: 'true'
#      KAFKA_HEAP_OPTS: ${KAFKA_BROKER_HEAP_OPTS}


  jmx-kafka101:
    image: "sscaling/jmx-prometheus-exporter"
    ports:
      - "5556:5556"
    environment:
      CONFIG_YML: "/etc/jmx_exporter/config.yml"
      JVM_OPTS: ${PROMETHEUS_JMX_AGENT_JVM_OPTS}
    volumes:
      - ./etc/jmx-exporter/config-kafka101.yml:/etc/jmx_exporter/config.yml
    container_name: jmx-kafka101
    depends_on:
      - kafka101

#  jmx-kafka102:
#    image: "sscaling/jmx-prometheus-exporter"
#    ports:
#      - "5557:5556"
#    environment:
#      CONFIG_YML: "/etc/jmx_exporter/config.yml"
#      JVM_OPTS: ${PROMETHEUS_JMX_AGENT_JVM_OPTS}
#
#    volumes:
#      - ./etc/jmx-exporter/config-kafka102.yml:/etc/jmx_exporter/config.yml
#    container_name: jmx-kafka102
#    depends_on:
#      - kafka102
#
#  jmx-kafka103:
#    image: "sscaling/jmx-prometheus-exporter"
#    ports:
#      - "5558:5556"
#    environment:
#      CONFIG_YML: "/etc/jmx_exporter/config.yml"
#      JVM_OPTS: ${PROMETHEUS_JMX_AGENT_JVM_OPTS}
#    volumes:
#      - ./etc/jmx-exporter/config-kafka103.yml:/etc/jmx_exporter/config.yml
#    container_name: jmx-kafka103
#    depends_on:
#      - kafka103

  grafana:
    image: "grafana/grafana:${GRAFANA_VERSION}"
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    container_name: grafana
    depends_on:
      - prometheus

  prometheus:
    image: "prom/prometheus:${PROMETHEUS_VERSION}"
    ports:
      - "9090:9090"
    volumes:
      - ./etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command: "--config.file=/etc/prometheus/prometheus.yml"
    container_name: prometheus

  postgres:
    image: postgres
    hostname: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: dbcache
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - postgres
    ports:
      - "5555:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.pl
      PGADMIN_DEFAULT_PASSWORD: admin
    restart: unless-stopped

volumes:
  grafana-storage:
  postgres-data: